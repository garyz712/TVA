//-----------------------------------------------------------------------------
// positional_encoding_rom_fp16.sv
//
// A simple BRAM‑initialized ROM of FP16 sin/cos table,
// for simulation, generated by the Python script and dumped
// into pos_embed_fp16.mem
// for synthesize, need some other way to load into initial RAM
//
// Apr. 15 2025    Max Zhang      Initial version
//-----------------------------------------------------------------------------

module positional_encoding_rom_fp16 #(
    parameter int DATA_WIDTH = 16,
    parameter int NUM_TOKENS = 196,
    parameter int E          = 128,
    parameter string MEMFILE = "pos_embed_fp16.mem"
)(
    input  logic                          clk,
    input  logic                          rst_n,
    input  logic [$clog2(NUM_TOKENS)-1:0] token_idx,
    input  logic [$clog2(E)-1:0]          dim,
    output logic [DATA_WIDTH-1:0]         pos_val
);

    localparam int DEPTH = NUM_TOKENS * E;

    logic [DATA_WIDTH-1:0]    rom [0:DEPTH-1];
    logic [$clog2(DEPTH)-1:0] addr;

    // For simulation
    initial begin
        $display("Loading ROM contents from %s", MEMFILE);
        $readmemh(MEMFILE, rom);
    end

    always_comb begin
        addr = token_idx * E + dim;
    end

    // one‑cycle BRAM read
    always_ff @(posedge clk) begin
        pos_val <= rom[addr];
    end

endmodule